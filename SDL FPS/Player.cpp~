#include "Player.h"

Player::Player(collisionsphere sphere,float normals, float looks)
{
	cs = sphere;
	normalSpeed = normals;
	lookSpeed = looks;
	cam.setSpeed(normals,looks);
	setPosition(cam.getLocation());
	//cam.setSpeed
	
};



void Player::update(std::vector<collisionplane> cp)
{
	//cp = obj.getVector();
	vector3d newpos(cam.getLocation());
	//vector3d tmp(newpos);
	setPosition(newpos);
	for(int i=0;i<cp.size();i++)
		collision::sphereplane(newpos,cp[i].normal,cp[i].p[0],cp[i].p[1],cp[i].p[2],cp[i].p[3],cs.r);
		
	//if(cam.getLocation().y < newpos.y)
	
}

void Player:: setPosition(vector3d pos)
{
	cs.center = pos;
	cam.setLocation(pos);
};

collisionsphere Player::getCollisionSphere()
{
	return cs;
};
float Player:: getLookSpeed()
{
	return lookSpeed;
};
float Player::getNormalSpeed()
{
	return normalSpeed;
};
void Player::setLookSpeed(float ls)
{
	lookSpeed = ls;
};
void Player::setNormalSpeed(float ns)
{
	normalSpeed = ns;
};
	
